// Mocks generated by Mockito 5.3.2 from annotations
// in save_contacts_tdd/test/data/repositories/contact_repository_impl/contact_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:save_contacts_tdd/data/data_sources/contacts_data_source/contact_local_data_source.dart'
    as _i2;
import 'package:save_contacts_tdd/data/models/contact_model/contact_model.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [ContactLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockContactLocalDataSource extends _i1.Mock
    implements _i2.ContactLocalDataSource {
  @override
  _i3.Future<List<_i4.ContactModel>> addContact(
          _i4.ContactModel? contactModel) =>
      (super.noSuchMethod(
        Invocation.method(
          #addContact,
          [contactModel],
        ),
        returnValue:
            _i3.Future<List<_i4.ContactModel>>.value(<_i4.ContactModel>[]),
        returnValueForMissingStub:
            _i3.Future<List<_i4.ContactModel>>.value(<_i4.ContactModel>[]),
      ) as _i3.Future<List<_i4.ContactModel>>);
  @override
  _i3.Future<List<_i4.ContactModel>> getAllContacts() => (super.noSuchMethod(
        Invocation.method(
          #getAllContacts,
          [],
        ),
        returnValue:
            _i3.Future<List<_i4.ContactModel>>.value(<_i4.ContactModel>[]),
        returnValueForMissingStub:
            _i3.Future<List<_i4.ContactModel>>.value(<_i4.ContactModel>[]),
      ) as _i3.Future<List<_i4.ContactModel>>);
}
